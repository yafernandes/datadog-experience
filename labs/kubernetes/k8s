#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

# Support resolving SCRIPT_DIR even when called from soft links
SOURCE="${BASH_SOURCE[0]}"
while [ -L "$SOURCE" ]; do
  DIR="$(cd -P "$(dirname "$SOURCE")" >/dev/null 2>&1 && pwd)"
  SOURCE="$(readlink "$SOURCE")"
  [[ "$SOURCE" != /* ]] && SOURCE="$DIR/$SOURCE"
done
SCRIPT_DIR="$(cd -P "$(dirname "$SOURCE")" >/dev/null 2>&1 && pwd)"
CLUSTERS_DIR=$SCRIPT_DIR/clusters

if [ "$#" -eq 0 ]
then
    echo -e '\033[0;32mAvailable clusters\033[0m'
    for path in $(find $CLUSTERS_DIR -name config); do
        cluster_name=$(basename "$(dirname "$path")")
        echo "$cluster_name"
    done
    exit 0
fi

KUBECONFIG=$CLUSTERS_DIR/${1}/config

if [ -f $KUBECONFIG ]
then
    ln -sf $KUBECONFIG ~/.kube/config
    kubectl get nodes
else
    echo -e "\033[0;31mConfig does not exist.\033[0m\007"
fi

